
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR_LITERAL COMMA EQUALS ID NUMBER SEMICOLON STRING_LITERAL TYPEdeclaration : TYPE declarator_list SEMICOLONdeclarator_list : declaratordeclarator_list : declarator_list COMMA declaratordeclarator : IDdeclarator : ID EQUALS initializerinitializer : NUMBERinitializer : CHAR_LITERALinitializer : STRING_LITERAL'
    
_lr_action_items = {'TYPE':([0,],[2,]),'$end':([1,6,],[0,-1,]),'ID':([2,7,],[5,5,]),'SEMICOLON':([3,4,5,9,10,11,12,13,],[6,-2,-4,-3,-5,-6,-7,-8,]),'COMMA':([3,4,5,9,10,11,12,13,],[7,-2,-4,-3,-5,-6,-7,-8,]),'EQUALS':([5,],[8,]),'NUMBER':([8,],[11,]),'CHAR_LITERAL':([8,],[12,]),'STRING_LITERAL':([8,],[13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([0,],[1,]),'declarator_list':([2,],[3,]),'declarator':([2,7,],[4,9,]),'initializer':([8,],[10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaration","S'",1,None,None,None),
  ('declaration -> TYPE declarator_list SEMICOLON','declaration',3,'p_declaration','analisador_c_.py',78),
  ('declarator_list -> declarator','declarator_list',1,'p_declarator_list_single','analisador_c_.py',84),
  ('declarator_list -> declarator_list COMMA declarator','declarator_list',3,'p_declarator_list_multi','analisador_c_.py',88),
  ('declarator -> ID','declarator',1,'p_declarator_no_init','analisador_c_.py',93),
  ('declarator -> ID EQUALS initializer','declarator',3,'p_declarator_init','analisador_c_.py',97),
  ('initializer -> NUMBER','initializer',1,'p_initializer_number','analisador_c_.py',102),
  ('initializer -> CHAR_LITERAL','initializer',1,'p_initializer_char','analisador_c_.py',106),
  ('initializer -> STRING_LITERAL','initializer',1,'p_initializer_string','analisador_c_.py',110),
]
